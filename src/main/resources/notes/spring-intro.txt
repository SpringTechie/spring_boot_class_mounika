Before spring boot application developed using spring framework.
where we need to manually create beans and inject beans and manually adding server(tomcat) etc..

Spring-boot built on top of spring framework:
Spring boot comes with autoconfiguration.
spring boot comes with embedded tomcat server.
spring boot comes with stater dependencies.
spring boot eliminates xml type bean creation.

How Autoconfiguration works?
spring-boot automatically configure the beans in the application context based on the classpath and env .

@EnableAutoConfiguration : triggers auto configuration

@SpringBootApplication  this annotation is equal to three annotation:
1.@EnableAutoConfiguration : triggers auto configuration
2.@SpringBootConfiguration(@Configuration) : marks the class as configuration class.
3.@ComponentScan : Enables component scanning to detect spring beans.
// How to scan other packages other than prepackages classes?
??????

Where exactly objects(beans) are created?
Beans are created inside the IOC(Inversion of Container) container.
IOC : the process of taking object creation from application to container.

Bean(Object): The life cycle(creating,managing,destruction) of bean is managed by container.

Ioc are two types:
1.Bean Factory: It is simple container used in building small applications.
  - This is lazy loading.
  - it creates beans on demand.
2.Application Context : It sub interface of Bean Factory which has advanced features.
  - one of the important feature it supports the Internationalization(i18)
  - This is eager loading.(meaning it creates all objects at the time of application startup.
